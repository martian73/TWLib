// Generated by Xamasoft JSON Class Generator
// http://www.xamasoft.com/json-class-generator

using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;


namespace TWLib.Streamer.Models
{
    public class DxfeedMetaHandshakeReq : DxfeedRequest
    {
        public DxfeedMetaHandshakeReq()
        {

        }

        public DxfeedMetaHandshakeReq(int interval, int timeout, string authToken)
        {
            Advice = new Advice2();
            Ext = new Ext2();
            Advice.Timeout = timeout;
            Advice.Timeout = interval;
            Ext.ComDevexpertsAuthToken = authToken;
        }

        public class Advice2
        {

            [JsonProperty("timeout")]
            public int Timeout { get; set; }

            [JsonProperty("interval")]
            public int Interval { get; set; }
        }

        public class Ext2
        {

            [JsonProperty("com.devexperts.auth.AuthToken")]
            public string ComDevexpertsAuthToken { get; set; }
        }

        [JsonProperty("advice")]
        public Advice2 Advice { get; set; }

        [JsonProperty("channel")]
        [JsonConverter(typeof(StringEnumConverter))]
        public override DxfeedChannel Channel { get { return DxfeedChannel.METAHANDSHAKE; } }

        [JsonProperty("ext")]
        public Ext2 Ext { get; set; }

        [JsonProperty("minimumVersion")]
        public string MinimumVersion { get { return TWClient.MinimumVersion; } }

        [JsonProperty("supportedConnectionTypes")]
        public IList<string> SupportedConnectionTypes { get { return new List<string>(new String[] { "websocket" }); } }

        [JsonProperty("version")]
        public string Version { get { return TWClient.ClientVersion; } }

        public override string Serialize()
        {
            DxfeedMetaHandshakeReq[] arr = new DxfeedMetaHandshakeReq[] { this };
            return JsonConvert.SerializeObject(arr);
        }

        public override TWRequest Deserialize(string json)
        {
            return JsonConvert.DeserializeObject<DxfeedMetaHandshakeReq>(json);
        }

    }
}
