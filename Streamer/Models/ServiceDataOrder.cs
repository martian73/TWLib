using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TWLib.Streamer.Models
{
    // Generated by Xamasoft JSON Class Generator
    // http://www.xamasoft.com/json-class-generator

    public class Order : ServiceData
    {
        [JsonIgnoreAttribute]
        public override ServiceDataType DataType
        {
            get
            {
                return ServiceDataType.ORDER;
            }
        }

        [JsonIgnoreAttribute]
        public static string[] Headers = null;

        public class Leg
        {
            [JsonProperty("instrument-type")]
            public string InstrumentType { get; set; }

            [JsonProperty("symbol")]
            public string Symbol { get; set; }

            [JsonProperty("quantity")]
            public int Quantity { get; set; }

            [JsonProperty("remaining-quantity")]
            public int RemainingQuantity { get; set; }

            [JsonProperty("action")]
            public string Action { get; set; }

            [JsonProperty("fills")]
            public IList<object> Fills { get; set; }
        }

        public class Order2
        {

            [JsonProperty("id")]
            public int Id { get; set; }

            [JsonProperty("account-number")]
            public string AccountNumber { get; set; }

            [JsonProperty("time-in-force")]
            public string TimeInForce { get; set; }

            [JsonProperty("order-type")]
            public string OrderType { get; set; }

            [JsonProperty("size")]
            public int Size { get; set; }

            [JsonProperty("underlying-symbol")]
            public string UnderlyingSymbol { get; set; }

            [JsonProperty("price")]
            public string Price { get; set; }

            [JsonProperty("price-effect")]
            public string PriceEffect { get; set; }

            [JsonProperty("status")]
            public string Status { get; set; }

            [JsonProperty("cancellable")]
            public bool Cancellable { get; set; }

            [JsonProperty("editable")]
            public bool Editable { get; set; }

            [JsonProperty("edited")]
            public bool Edited { get; set; }

            [JsonProperty("received-at")]
            public string ReceivedAt { get; set; }

            [JsonProperty("updated-at")]
            public long UpdatedAt { get; set; }

            [JsonProperty("legs")]
            public IList<Leg> Legs { get; set; }
        }

        public class Warning
        {

            [JsonProperty("code")]
            public string Code { get; set; }

            [JsonProperty("message")]
            public string Message { get; set; }
        }

        public class BuyingPowerEffect
        {

            [JsonProperty("change-in-margin-requirement")]
            public string ChangeInMarginRequirement { get; set; }

            [JsonProperty("change-in-margin-requirement-effect")]
            public string ChangeInMarginRequirementEffect { get; set; }

            [JsonProperty("change-in-buying-power")]
            public string ChangeInBuyingPower { get; set; }

            [JsonProperty("change-in-buying-power-effect")]
            public string ChangeInBuyingPowerEffect { get; set; }

            [JsonProperty("current-buying-power")]
            public string CurrentBuyingPower { get; set; }

            [JsonProperty("current-buying-power-effect")]
            public string CurrentBuyingPowerEffect { get; set; }

            [JsonProperty("new-buying-power")]
            public string NewBuyingPower { get; set; }

            [JsonProperty("new-buying-power-effect")]
            public string NewBuyingPowerEffect { get; set; }

            [JsonProperty("isolated-order-margin-requirement")]
            public string IsolatedOrderMarginRequirement { get; set; }

            [JsonProperty("isolated-order-margin-requirement-effect")]
            public string IsolatedOrderMarginRequirementEffect { get; set; }

            [JsonProperty("is-spread")]
            public bool IsSpread { get; set; }

            [JsonProperty("impact")]
            public string Impact { get; set; }

            [JsonProperty("effect")]
            public string Effect { get; set; }
        }

        public class FeeCalculation
        {

            [JsonProperty("regulatory-fees")]
            public string RegulatoryFees { get; set; }

            [JsonProperty("regulatory-fees-effect")]
            public string RegulatoryFeesEffect { get; set; }

            [JsonProperty("clearing-fees")]
            public string ClearingFees { get; set; }

            [JsonProperty("clearing-fees-effect")]
            public string ClearingFeesEffect { get; set; }

            [JsonProperty("commission")]
            public string Commission { get; set; }

            [JsonProperty("commission-effect")]
            public string CommissionEffect { get; set; }

            [JsonProperty("proprietary-index-option-fees")]
            public string ProprietaryIndexOptionFees { get; set; }

            [JsonProperty("proprietary-index-option-fees-effect")]
            public string ProprietaryIndexOptionFeesEffect { get; set; }

            [JsonProperty("total-fees")]
            public string TotalFees { get; set; }

            [JsonProperty("total-fees-effect")]
            public string TotalFeesEffect { get; set; }
        }

        public class Data2
        {

            [JsonProperty("order")]
            public Order2 Order { get; set; }

            [JsonProperty("warnings")]
            public IList<Warning> Warnings { get; set; }

            [JsonProperty("buying-power-effect")]
            public BuyingPowerEffect BuyingPowerEffect { get; set; }

            [JsonProperty("fee-calculation")]
            public FeeCalculation FeeCalculation { get; set; }
        }


        [JsonProperty("data")]
        public Data2 Data { get; set; }

        [JsonProperty("api-version")]
        public string ApiVersion { get; set; }

        [JsonProperty("context")]
        public string Context { get; set; }

    }
}
