/*   This file is part of TWLib.
 *
 *    TWLib is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    TWLib is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with TWLib.  If not, see <https://www.gnu.org/licenses/>.
 ******************************************************************************
 *
 *    Project available from here: https://github.com/martian73/TWLib.git
 ******************************************************************************
 */
// Generated by Xamasoft JSON Class Generator
// http://www.xamasoft.com/json-class-generator

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace TWLib.Models
{
    [JsonConverter(typeof(StringEnumConverter))] public enum OrderType {[EnumMember(Value = "Market")] MARKET, [EnumMember(Value = "Limit")] LIMIT, [EnumMember(Value = "Stop")] STOPMARKET, [EnumMember(Value = "Stop Limit")] STOPLIMIT }
    [JsonConverter(typeof(StringEnumConverter))] public enum TimeInForce {[EnumMember(Value = "Day")] DAY, [EnumMember(Value = "GTC")] GTC, [EnumMember(Value = "GTD")] GTD, [EnumMember(Value = "Ext")] EXT }
    [JsonConverter(typeof(StringEnumConverter))] public enum Action {[EnumMember(Value = "Buy to Open")] BUYTOOPEN, [EnumMember(Value = "Buy to Close")] BUYTOCLOSE, [EnumMember(Value = "Sell to Close")] SELLTOCLOSE, [EnumMember(Value = "Sell to Open")] SELLTOOPEN }
    [JsonConverter(typeof(StringEnumConverter))] public enum PriceEffect {[EnumMember(Value = "Debit")] DEBIT, [EnumMember(Value = "Credit")] CREDIT }
    [JsonConverter(typeof(StringEnumConverter))] public enum InstrumentType {[EnumMember(Value = "Equity")] EQUITY, [EnumMember(Value = "Equity Option")] EQUITYOPTION, [EnumMember(Value = "Future")] FUTURE }
    [JsonConverter(typeof(StringEnumConverter))] public enum QuantityDirection {[EnumMember(Value = "Long")] LONG, [EnumMember(Value = "Short")] SHORT }
    public class Order
    {
        public class Leg
        {
            [JsonProperty("instrument-type")]
            public InstrumentType InstrumentType
            {
                get;
                set;
            }
            [JsonProperty("symbol")]
            public string Symbol
            {
                get;
                set;
            }
            [JsonProperty("quantity")]
            public double Quantity
            {
                get;
                set;
            }
            [JsonProperty("action")]
            public Action Action
            {
                get;
                set;
            }
        }
        [JsonProperty("order-type")]
        public OrderType OrderType
        {
            get;
            set;
        }
        [JsonProperty("time-in-force")]
        public TimeInForce TimeInForce
        {
            get;
            set;
        }
        [JsonProperty("price")]
        public string Price
        {
            get;
            set;
        }
        [JsonProperty("price-effect")]
        public PriceEffect PriceEffect
        {
            get;
            set;
        }
        [JsonProperty("stop-trigger")]
        public string StopTrigger
        {
            get;
            set;
        }
        [JsonProperty("legs")]
        public IList<Leg> Legs
        {
            get;
            set;
        }
        [JsonProperty("source")]
        public string Source
        {
            get;
            set;
        }
    }
}
